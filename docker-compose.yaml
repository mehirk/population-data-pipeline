x-airflow-common: &airflow-common
  image: apache/airflow:2.8.2
  env_file:
    - .env
  environment:
    - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    - AIRFLOW__CORE__FERNET_KEY=
    - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=true
    - AIRFLOW__CORE__LOAD_EXAMPLES=false
    - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
    - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
    # install extra Python libs inside Airflow containers
    - _PIP_ADDITIONAL_REQUIREMENTS=pandas boto3
  volumes:
    - ./airflow/dags:/opt/airflow/dags
    - ./airflow/logs:/opt/airflow/logs
    - ./airflow/plugins:/opt/airflow/plugins
  user: "${AIRFLOW_UID:-50000}:0"
  depends_on:
    - postgres

services:
  # --------------------------
  # PostgreSQL database
  # --------------------------
  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data

  # --------------------------
  # Airflow initialization
  # --------------------------
  airflow-init:
    <<: *airflow-common
    command: bash -c "airflow db init && airflow users create --username admin --firstname Admin --lastname User --role Admin --email admin@example.com --password admin"

  # --------------------------
  # Airflow webserver
  # --------------------------
  webserver:
    <<: *airflow-common
    command: bash -c "airflow db migrate && airflow webserver"
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - airflow-init

  # --------------------------
  # Airflow scheduler
  # --------------------------
  scheduler:
    <<: *airflow-common
    command: bash -c "airflow db migrate && airflow scheduler"
    depends_on:
      - postgres
      - airflow-init

  # --------------------------
  # FastAPI backend
  # --------------------------
  api:
    build:
      context: ./api                # path to your api folder
    container_name: population-api
    env_file:
      - .env                        # same .env that Airflow uses
    ports:
      - "8000:8000"                 # backend runs on http://localhost:8000
    depends_on:
      - webserver                   # start after Airflow webserver
    restart: unless-stopped         # auto-restart if it crashes

# --------------------------
# Docker volumes
# --------------------------
volumes:
  postgres-db-volume: